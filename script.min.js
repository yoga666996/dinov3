// 优化的脚本 - 图片懒加载、WebP支持和性能监控
// 性能监控函数
function initPerformanceMonitoring() {
    // Core Web Vitals 监控
    if ('web-vital' in window) return;
    
    // 监控 First Contentful Paint (FCP)
    if ('PerformanceObserver' in window) {
        try {
            const observer = new PerformanceObserver((list) => {
                const entries = list.getEntries();
                entries.forEach((entry) => {
                    if (entry.name === 'first-contentful-paint') {
                        console.log('FCP:', entry.startTime + 'ms');
                        // 可以发送到分析服务
                        sendMetric('fcp', entry.startTime);
                    }
                });
            });
            observer.observe({ entryTypes: ['paint'] });
        } catch (e) {
            console.warn('Performance monitoring not supported');
        }
    }
    
    // 监控 Largest Contentful Paint (LCP)
    try {
        const lcpObserver = new PerformanceObserver((list) => {
            const entries = list.getEntries();
            const lastEntry = entries[entries.length - 1];
            console.log('LCP:', lastEntry.startTime + 'ms');
            sendMetric('lcp', lastEntry.startTime);
        });
        lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] });
    } catch (e) {
        console.warn('LCP monitoring not supported');
    }
    
    // 页面加载完成后的性能报告
    window.addEventListener('load', () => {
        setTimeout(() => {
            const navigation = performance.getEntriesByType('navigation')[0];
            const loadTime = navigation.loadEventEnd - navigation.loadEventStart;
            const domContentLoaded = navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart;
            
            console.log('页面性能报告:');
            console.log('DOM加载时间:', domContentLoaded + 'ms');
            console.log('页面完全加载时间:', loadTime + 'ms');
            console.log('DNS查询时间:', navigation.domainLookupEnd - navigation.domainLookupStart + 'ms');
            console.log('TCP连接时间:', navigation.connectEnd - navigation.connectStart + 'ms');
            
            // 发送性能数据到分析服务
            sendMetric('page_load_time', loadTime);
            sendMetric('dom_content_loaded', domContentLoaded);
        }, 1000);
    });
}

// 发送性能指标到分析服务（这里只是示例，可以替换为实际的分析服务）
function sendMetric(name, value) {
    // 可以发送到 Google Analytics, 自建服务等
    if (typeof gtag !== 'undefined') {
        gtag('event', 'page_performance', {
            custom_map: { metric_name: name },
            metric_name: name,
            value: Math.round(value)
        });
    }
}

document.addEventListener('DOMContentLoaded', function() {
    // 性能监控优先执行
    initPerformanceMonitoring();
    
    // 核心功能立即执行
    initVideoPlayer();
    setupNavigation();
    initLazyLoading();
    initWebPSupport();
    
    // 延迟加载第三方脚本
    setTimeout(loadAnalytics, 3000);
});

// 图片懒加载功能
function initLazyLoading() {
    if ('IntersectionObserver' in window) {
        const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target;
                    if (img.dataset.src) {
                        img.src = img.dataset.src;
                        img.classList.remove('lazy');
                        observer.unobserve(img);
                    }
                }
            });
        }, {
            rootMargin: '50px 0px',
            threshold: 0.01
        });

        document.querySelectorAll('img[data-src]').forEach(img => {
            imageObserver.observe(img);
        });
    } else {
        // 降级处理：直接加载所有图片
        document.querySelectorAll('img[data-src]').forEach(img => {
            img.src = img.dataset.src;
        });
    }
}

// WebP支持检测和优化
function initWebPSupport() {
    const webpSupported = checkWebPSupport();
    if (webpSupported) {
        document.documentElement.classList.add('webp-supported');
        // 替换图片URL为WebP格式（如果可用）
        document.querySelectorAll('img[data-webp]').forEach(img => {
            if (img.dataset.webp) {
                img.dataset.src = img.dataset.webp;
            }
        });
    }
}

// 检测WebP支持
function checkWebPSupport() {
    const canvas = document.createElement('canvas');
    canvas.width = 1;
    canvas.height = 1;
    return canvas.toDataURL('image/webp').indexOf('data:image/webp') === 0;
}

function initVideoPlayer() {
    const playButtons = document.querySelectorAll('.play-button, #video-placeholder');
    playButtons.forEach(button => {
        button.addEventListener('click', function() {
            const videoContainer = this.closest('.video-container');
            if (videoContainer) {
                loadVideo(videoContainer);
            }
        });
    });
}

function loadVideo(container) {
    const iframe = document.createElement('iframe');
    iframe.src = 'https://www.youtube.com/embed/6nQHtKwo-2U?autoplay=1&rel=0&modestbranding=1';
    iframe.allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture';
    iframe.allowFullscreen = true;
    iframe.style.cssText = 'position:absolute;top:0;left:0;width:100%;height:100%;border:none;border-radius:16px;';
    
    // 隐藏占位符
    const overlay = container.querySelector('.video-overlay, #video-placeholder');
    if (overlay) overlay.style.display = 'none';
    
    container.appendChild(iframe);
}

function setupNavigation() {
    // 平滑滚动
    document.querySelectorAll('a[href^="#"]').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({ behavior: 'smooth' });
            }
        });
    });
}

function loadAnalytics() {
    // 只在用户同意的情况下加载分析脚本
    if (typeof gtag === 'undefined') {
        // Google Analytics
        const gaScript = document.createElement('script');
        gaScript.async = true;
        gaScript.src = 'https://www.googletagmanager.com/gtag/js?id=GA_MEASUREMENT_ID';
        document.head.appendChild(gaScript);
        
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        window.gtag = gtag;
        gtag('js', new Date());
        gtag('config', 'GA_MEASUREMENT_ID', {
            page_title: document.title,
            page_location: window.location.href
        });
    }
}

// 性能监控
if ('PerformanceObserver' in window) {
    const observer = new PerformanceObserver((list) => {
        list.getEntries().forEach((entry) => {
            if (entry.entryType === 'largest-contentful-paint') {
                console.log('LCP:', entry.startTime);
            }
            if (entry.entryType === 'first-input') {
                console.log('FID:', entry.processingStart - entry.startTime);
            }
        });
    });
    
    try {
        observer.observe({entryTypes: ['largest-contentful-paint', 'first-input']});
    } catch (e) {
        // Fallback for older browsers
    }
}